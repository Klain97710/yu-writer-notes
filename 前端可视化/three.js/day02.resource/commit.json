{"compress":true,"commitItems":[["bef8c448-fb6c-4114-91c8-5b71fcd5d0a0",1605234163100,"",[[1605234106002,["Administrator@WIN-T3FPCJLTUH1",[[1,0,"# day02\n\n\n\n"]],[0,0],[10,10]]],[1605249828638,["Administrator@WIN-T3FPCJLTUH1",[[1,9,"###"]],[9,9],[12,12]]],[1605249829350,["Administrator@WIN-T3FPCJLTUH1",[[-1,11,"#"]],[12,12],[11,11]]],[1605249838043,["Administrator@WIN-T3FPCJLTUH1",[[1,11," 创建物体"]],[11,11],[16,16]]],[1605249844762,["Administrator@WIN-T3FPCJLTUH1",[[-1,12,"创建物体"]],[16,16],[12,12]]],[1605249849941,["Administrator@WIN-T3FPCJLTUH1",[[1,12,"添加物体到场景中"]],[12,12],[20,20]]],[1605249851776,["Administrator@WIN-T3FPCJLTUH1",[[1,22,"\n"]],[20,20],[21,21]]],[1605249852724,["Administrator@WIN-T3FPCJLTUH1",[[1,23,"\n"]],[21,21],[22,22]]],[1605249854075,["Administrator@WIN-T3FPCJLTUH1",[[1,22,"```"]],[22,22],[25,25]]],[1605249854099,["Administrator@WIN-T3FPCJLTUH1",[[1,25,"language\n```\n"]],[25,25],[25,33]]],[1605249854564,["Administrator@WIN-T3FPCJLTUH1",[[-1,25,"language"],[1,33,"j"]],[25,33],[26,26]]],[1605249856651,["Administrator@WIN-T3FPCJLTUH1",[[1,26,"avascript"]],[26,26],[35,35]]],[1605249857325,["Administrator@WIN-T3FPCJLTUH1",[[1,36,"\n"]],[35,35],[36,36]]],[1605249860250,["Administrator@WIN-T3FPCJLTUH1",[[1,36,"var f"]],[36,36],[41,41]]],[1605249860926,["Administrator@WIN-T3FPCJLTUH1",[[-1,40,"f"]],[41,41],[40,40]]],[1605249868862,["Administrator@WIN-T3FPCJLTUH1",[[1,40,"geometry = new THRE"]],[40,40],[59,59]]],[1605249872050,["Administrator@WIN-T3FPCJLTUH1",[[1,59,"E.C"]],[59,59],[62,62]]],[1605249874024,["Administrator@WIN-T3FPCJLTUH1",[[-1,61,"C"]],[62,62],[61,61]]],[1605249875337,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"c"]],[61,61],[62,62]]],[1605249875987,["Administrator@WIN-T3FPCJLTUH1",[[-1,61,"c"]],[62,62],[61,61]]],[1605249906101,["Administrator@WIN-T3FPCJLTUH1",[[1,61,"CubeGeometry();"]],[61,61],[76,76]]],[1605249909476,["Administrator@WIN-T3FPCJLTUH1",[[1,74,"1, 1, 1"]],[74,74],[81,81]]],[1605249914488,["Administrator@WIN-T3FPCJLTUH1",[[1,83," // geof"]],[83,83],[91,91]]],[1605249915312,["Administrator@WIN-T3FPCJLTUH1",[[-1,90,"f"]],[91,91],[90,90]]],[1605249919400,["Administrator@WIN-T3FPCJLTUH1",[[1,90,"metry "]],[90,90],[96,96]]],[1605249920262,["Administrator@WIN-T3FPCJLTUH1",[[-1,95," "]],[96,96],[95,95]]],[1605249924466,["Administrator@WIN-T3FPCJLTUH1",[[1,95,": 几何体"]],[95,95],[100,100]]],[1605249925675,["Administrator@WIN-T3FPCJLTUH1",[[1,101,"\n"]],[100,100],[101,101]]],[1605249929076,["Administrator@WIN-T3FPCJLTUH1",[[1,101,"var "]],[101,101],[105,105]]],[1605249951665,["Administrator@WIN-T3FPCJLTUH1",[[1,105,"material = new THREE.MeshBasicMateria();"]],[105,105],[145,145]]],[1605249954183,["Administrator@WIN-T3FPCJLTUH1",[[1,143,"{}"]],[143,143],[145,145]]],[1605249962290,["Administrator@WIN-T3FPCJLTUH1",[[1,144,"color: 0xff00"]],[144,144],[157,157]]],[1605249965689,["Administrator@WIN-T3FPCJLTUH1",[[1,153,"00"]],[153,153],[155,155]]],[1605249969526,["Administrator@WIN-T3FPCJLTUH1",[[1,163,"\n"]],[162,162],[163,163]]],[1605249982852,["Administrator@WIN-T3FPCJLTUH1",[[1,163,"var cube = new THREE,"]],[163,163],[184,184]]],[1605249984551,["Administrator@WIN-T3FPCJLTUH1",[[-1,183,","]],[184,184],[183,183]]],[1605249988715,["Administrator@WIN-T3FPCJLTUH1",[[1,183,".Mesh"]],[183,183],[188,188]]],[1605249990565,["Administrator@WIN-T3FPCJLTUH1",[[1,188,"();"]],[188,188],[191,191]]],[1605249994651,["Administrator@WIN-T3FPCJLTUH1",[[1,189,"geomer"]],[189,189],[195,195]]],[1605249995112,["Administrator@WIN-T3FPCJLTUH1",[[-1,194,"r"]],[195,195],[194,194]]],[1605249996514,["Administrator@WIN-T3FPCJLTUH1",[[1,194,"try."]],[194,194],[198,198]]],[1605249997013,["Administrator@WIN-T3FPCJLTUH1",[[-1,197,"."]],[198,198],[197,197]]],[1605249999152,["Administrator@WIN-T3FPCJLTUH1",[[1,197,", materail"]],[197,197],[207,207]]],[1605250003075,["Administrator@WIN-T3FPCJLTUH1",[[-1,204,"ail"]],[207,207],[204,204]]],[1605250003852,["Administrator@WIN-T3FPCJLTUH1",[[1,204,"ial"]],[204,204],[207,207]]],[1605250038879,["Administrator@WIN-T3FPCJLTUH1",[[1,162," // "]],[162,162],[166,166]]],[1605250044387,["Administrator@WIN-T3FPCJLTUH1",[[1,36,"\n"]],[35,35],[36,36]]],[1605250048798,["Administrator@WIN-T3FPCJLTUH1",[[1,84,"// geometry: 几何体"]],[84,101],[100,100]]],[1605250051440,["Administrator@WIN-T3FPCJLTUH1",[[-1,84,"// geometry: 几何体 // geometry: 几何体"]],[100,100],[84,84]]],[1605250052815,["Administrator@WIN-T3FPCJLTUH1",[[1,36," // geometry: 几何体"]],[36,36],[53,53]]],[1605250054576,["Administrator@WIN-T3FPCJLTUH1",[[-1,36," "]],[37,37],[36,36]]],[1605250057225,["Administrator@WIN-T3FPCJLTUH1",[[1,101,"\n"]],[100,100],[101,101]]],[1605250066191,["Administrator@WIN-T3FPCJLTUH1",[[1,101,"// material: 材质"]],[101,101],[116,116]]],[1605250068976,["Administrator@WIN-T3FPCJLTUH1",[[-1,178," // "]],[182,182],[178,178]]],[1605250069902,["Administrator@WIN-T3FPCJLTUH1",[[1,179,"\n"]],[178,178],[179,179]]],[1605250070878,["Administrator@WIN-T3FPCJLTUH1",[[1,179,"、、"]],[179,179],[181,181]]],[1605250071400,["Administrator@WIN-T3FPCJLTUH1",[[-1,179,"、、"]],[181,181],[179,179]]],[1605250078814,["Administrator@WIN-T3FPCJLTUH1",[[1,179,"// mesh: "]],[179,179],[188,188]]],[1605250121677,["Administrator@WIN-T3FPCJLTUH1",[[1,188,"使》。。"]],[188,188],[192,192]]],[1605250122414,["Administrator@WIN-T3FPCJLTUH1",[[-1,189,"》。。"]],[192,192],[189,189]]],[1605250125130,["Administrator@WIN-T3FPCJLTUH1",[[1,189,"...结合"]],[189,189],[194,194]]],[1605250146650,["Administrator@WIN-T3FPCJLTUH1",[[1,242,"\n"]],[241,241],[242,242]]],[1605250151827,["Administrator@WIN-T3FPCJLTUH1",[[1,242,"scene.add"]],[242,242],[251,251]]],[1605250154963,["Administrator@WIN-T3FPCJLTUH1",[[1,242,"\n"]],[242,242],[243,243]]],[1605250157302,["Administrator@WIN-T3FPCJLTUH1",[[1,252,"();"]],[252,252],[255,255]]],[1605250158728,["Administrator@WIN-T3FPCJLTUH1",[[1,253,"cube"]],[253,253],[257,257]]],[1605250225878,["Administrator@WIN-T3FPCJLTUH1",[[1,52," "]],[52,52],[53,53]]],[1605250228776,["Administrator@WIN-T3FPCJLTUH1",[[-1,52," "]],[53,53],[52,52]]],[1605250229216,["Administrator@WIN-T3FPCJLTUH1",[[1,52,"; "]],[52,52],[54,54]]],[1605250239321,["Administrator@WIN-T3FPCJLTUH1",[[1,54,"CubeGeometry: 立方体"]],[54,54],[71,71]]],[1605250267215,["Administrator@WIN-T3FPCJLTUH1",[[1,284,"CubeGeometry是一个正方体或者长方体，究竟是什么，由它的3个参数所决定，cubeGeometry的原型如下代码所示："]],[284,284],[347,347]]],[1605250270291,["Administrator@WIN-T3FPCJLTUH1",[[1,284,"`"],[1,296,"`"]],[284,296],[284,298]]],[1605250272651,["Administrator@WIN-T3FPCJLTUH1",[[1,327,"`"],[1,339,"`"]],[327,339],[327,341]]],[1605250276504,["Administrator@WIN-T3FPCJLTUH1",[[-1,328,"c"],[1,329,"C"]],[328,329],[329,329]]],[1605250279951,["Administrator@WIN-T3FPCJLTUH1",[[1,352,"\n"]],[351,351],[352,352]]],[1605250281704,["Administrator@WIN-T3FPCJLTUH1",[[-1,352,"\n"],[1,353,"`"]],[352,352],[353,353]]],[1605250282129,["Administrator@WIN-T3FPCJLTUH1",[[1,353,"`"]],[353,353],[354,354]]],[1605250288291,["Administrator@WIN-T3FPCJLTUH1",[[1,353,"CubeGeometry(width, height, depth, segmentsWidth, segmentsHeight, segmentsDepth, materials, sides)"]],[353,353],[451,451]]],[1605250301919,["Administrator@WIN-T3FPCJLTUH1",[[1,353,"``"]],[353,353],[355,355]]],[1605250303317,["Administrator@WIN-T3FPCJLTUH1",[[1,454,"``"]],[454,454],[456,456]]],[1605250311504,["Administrator@WIN-T3FPCJLTUH1",[[1,355," "]],[355,355],[356,356]]],[1605250312805,["Administrator@WIN-T3FPCJLTUH1",[[1,356,"\n"]],[356,356],[357,357]]],[1605250314966,["Administrator@WIN-T3FPCJLTUH1",[[-1,355," "]],[356,356],[355,355]]],[1605250317942,["Administrator@WIN-T3FPCJLTUH1",[[1,355,"javascript"]],[355,355],[365,365]]],[1605250322004,["Administrator@WIN-T3FPCJLTUH1",[[1,464,"\n"]],[464,464],[465,465]]],[1605250326216,["Administrator@WIN-T3FPCJLTUH1",[[1,352,"\n"]],[351,351],[352,352]]],[1605250343091,["Administrator@WIN-T3FPCJLTUH1",[[1,469,"\n\n"]],[469,469],[470,470]]],[1605250344117,["Administrator@WIN-T3FPCJLTUH1",[[1,471,"\n"]],[470,470],[471,471]]],[1605250344393,["Administrator@WIN-T3FPCJLTUH1",[[1,471,"width：立方体x轴的长度\n\nheight：立方体y轴的长度\n\ndepth：立方体z轴的深度，也就是长度"]],[471,471],[524,524]]],[1605250347892,["Administrator@WIN-T3FPCJLTUH1",[[-1,486,"\n"]],[486,486],[485,485]]],[1605250348504,["Administrator@WIN-T3FPCJLTUH1",[[-1,502,"\n"]],[502,502],[501,501]]],[1605250350816,["Administrator@WIN-T3FPCJLTUH1",[[1,485,";"]],[485,485],[486,486]]],[1605250351816,["Administrator@WIN-T3FPCJLTUH1",[[-1,485,";"]],[486,486],[485,485]]],[1605250352480,["Administrator@WIN-T3FPCJLTUH1",[[1,485,"；"]],[485,485],[486,486]]],[1605250353142,["Administrator@WIN-T3FPCJLTUH1",[[1,502,"；"]],[502,502],[503,503]]],[1605250354205,["Administrator@WIN-T3FPCJLTUH1",[[1,524,"。"]],[524,524],[525,525]]],[1605250370566,["Administrator@WIN-T3FPCJLTUH1",[[1,471,"`"],[1,476,"`"]],[471,476],[471,478]]],[1605250371816,["Administrator@WIN-T3FPCJLTUH1",[[1,489,"`"],[1,495,"`"]],[489,495],[489,497]]],[1605250372516,["Administrator@WIN-T3FPCJLTUH1",[[1,508,"`"],[1,513,"`"]],[508,513],[508,515]]],[1605250376516,["Administrator@WIN-T3FPCJLTUH1",[[1,532,"\n"]],[531,531],[532,532]]],[1605250376828,["Administrator@WIN-T3FPCJLTUH1",[[1,533,"\n"]],[532,532],[533,533]]],[1605250378356,["Administrator@WIN-T3FPCJLTUH1",[[-1,533,"\n"],[1,534,"#"]],[533,533],[534,534]]],[1605250382194,["Administrator@WIN-T3FPCJLTUH1",[[1,534,"# 渲染"]],[534,534],[538,538]]],[1605250382453,["Administrator@WIN-T3FPCJLTUH1",[[1,538,"\n\n"]],[538,538],[539,539]]],[1605250383590,["Administrator@WIN-T3FPCJLTUH1",[[1,540,"\n"]],[539,539],[540,540]]],[1605250642170,["Administrator@WIN-T3FPCJLTUH1",[[1,540,"渲染应该使用渲染器，结合相机和场景来得到结果画面。实现这个功能的函数是\n\nrenderer.render(scene, camera);\n\n渲染函数的原型如下：\n\nrender( scene, camera, renderTarget, forceClear )\n\n各个参数的意义是：\n\nscene：前面定义的场景\n\ncamera：前面定义的相机\n\nrenderTarget：渲染的目标，默认是渲染到前面定义的render变量中\n\nforceClear：每次绘制之前都将画布的内容给清除，即使自动清除标志autoClear为false，也会清除。"]],[540,540],[813,813]]],[1605250644930,["Administrator@WIN-T3FPCJLTUH1",[[-1,576,"\n"]],[576,576],[575,575]]],[1605250650606,["Administrator@WIN-T3FPCJLTUH1",[[1,576,"`"],[1,607,"`"]],[576,607],[576,609]]],[1605250654505,["Administrator@WIN-T3FPCJLTUH1",[[-1,607,";"]],[608,608],[607,607]]],[1605250656055,["Administrator@WIN-T3FPCJLTUH1",[[-1,609,"\n"]],[609,609],[608,608]]],[1605250656731,["Administrator@WIN-T3FPCJLTUH1",[[-1,620,"\n"]],[620,620],[619,619]]],[1605250660129,["Administrator@WIN-T3FPCJLTUH1",[[1,620,"`"],[1,669,"`"]],[620,669],[620,671]]],[1605250666117,["Administrator@WIN-T3FPCJLTUH1",[[-1,683,"\n"]],[683,683],[682,682]]],[1605250666893,["Administrator@WIN-T3FPCJLTUH1",[[-1,697,"\n"]],[697,697],[696,696]]],[1605250667681,["Administrator@WIN-T3FPCJLTUH1",[[-1,712,"\n"]],[712,712],[711,711]]],[1605250668394,["Administrator@WIN-T3FPCJLTUH1",[[-1,752,"\n"]],[752,752],[751,751]]],[1605250671221,["Administrator@WIN-T3FPCJLTUH1",[[1,696,"；"]],[696,696],[697,697]]],[1605250671645,["Administrator@WIN-T3FPCJLTUH1",[[1,712,"；"]],[712,712],[713,713]]],[1605250672658,["Administrator@WIN-T3FPCJLTUH1",[[1,753,"；"]],[753,753],[754,754]]],[1605250675368,["Administrator@WIN-T3FPCJLTUH1",[[1,683,"`"],[1,688,"`"]],[683,688],[683,690]]],[1605250675944,["Administrator@WIN-T3FPCJLTUH1",[[1,700,"`"],[1,706,"`"]],[700,706],[700,708]]],[1605250676569,["Administrator@WIN-T3FPCJLTUH1",[[1,718,"`"],[1,730,"`"]],[718,730],[718,732]]],[1605250677231,["Administrator@WIN-T3FPCJLTUH1",[[1,761,"`"],[1,771,"`"]],[761,771],[761,773]]],[1605250705656,["Administrator@WIN-T3FPCJLTUH1",[[1,821,"\n"]],[820,820],[821,821]]],[1605250705732,["Administrator@WIN-T3FPCJLTUH1",[[1,822,"\n"]],[821,821],[822,822]]],[1605250707958,["Administrator@WIN-T3FPCJLTUH1",[[-1,822,"\n"],[1,823,"#"]],[822,822],[823,823]]],[1605250708384,["Administrator@WIN-T3FPCJLTUH1",[[1,823,"##"]],[823,823],[825,825]]],[1605250709056,["Administrator@WIN-T3FPCJLTUH1",[[-1,824,"#"]],[825,825],[824,824]]],[1605250709220,["Administrator@WIN-T3FPCJLTUH1",[[1,824," "]],[824,824],[825,825]]],[1605250714034,["Administrator@WIN-T3FPCJLTUH1",[[1,825,"渲染循环"]],[825,825],[829,829]]],[1605250715526,["Administrator@WIN-T3FPCJLTUH1",[[1,829,"\n\n"]],[829,829],[830,830]]],[1605250716058,["Administrator@WIN-T3FPCJLTUH1",[[1,831,"\n"]],[830,830],[831,831]]],[1605250730945,["Administrator@WIN-T3FPCJLTUH1",[[1,831,"渲染有两种方式：实时渲染和离线渲染 。"]],[831,831],[850,850]]],[1605250733070,["Administrator@WIN-T3FPCJLTUH1",[[1,851,"\n"]],[850,850],[851,851]]],[1605250739794,["Administrator@WIN-T3FPCJLTUH1",[[1,852,"\n"]],[851,851],[852,852]]],[1605250741270,["Administrator@WIN-T3FPCJLTUH1",[[-1,852,"\n"],[1,853,"#"]],[852,852],[853,853]]],[1605250757223,["Administrator@WIN-T3FPCJLTUH1",[[1,853,"## 离线渲染"]],[853,853],[860,860]]],[1605250757745,["Administrator@WIN-T3FPCJLTUH1",[[1,860,"\n\n"]],[860,860],[861,861]]],[1605250758456,["Administrator@WIN-T3FPCJLTUH1",[[1,862,"\n"]],[861,861],[862,862]]],[1605250767761,["Administrator@WIN-T3FPCJLTUH1",[[-1,862,"\n"],[1,863,"先"]],[862,862],[863,863]]],[1605250863610,["Administrator@WIN-T3FPCJLTUH1",[[1,863,"将"]],[863,863],[864,864]]],[1605251316049,["Administrator@WIN-T3FPCJLTUH1",[[-1,862,"先将"],[1,864,"\n"]],[862,864],[862,862]]],[1605251316799,["Administrator@WIN-T3FPCJLTUH1",[[-1,862,"\n"]],[862,862],[861,861]]],[1605251317061,["Administrator@WIN-T3FPCJLTUH1",[[-1,861,"\n"]],[861,861],[860,860]]],[1605251318673,["Administrator@WIN-T3FPCJLTUH1",[[-1,852,"### 离线渲染"]],[860,860],[852,852]]],[1605251319162,["Administrator@WIN-T3FPCJLTUH1",[[-1,852,"\n"]],[852,852],[851,851]]],[1605251333303,["Administrator@WIN-T3FPCJLTUH1",[[-1,851,"\n"],[1,852,"那什么"]],[851,851],[854,854]]],[1605251334952,["Administrator@WIN-T3FPCJLTUH1",[[1,854,"是"]],[854,854],[855,855]]],[1605251337461,["Administrator@WIN-T3FPCJLTUH1",[[-1,852,"什么是"]],[855,855],[852,852]]],[1605251337624,["Administrator@WIN-T3FPCJLTUH1",[[-1,851,"那"],[1,852,"\n"]],[852,852],[851,851]]],[1605251342629,["Administrator@WIN-T3FPCJLTUH1",[[-1,851,"\n"],[1,852,"举个栗子"]],[851,851],[855,855]]],[1605251345076,["Administrator@WIN-T3FPCJLTUH1",[[1,855,"理解"]],[855,855],[857,857]]],[1605251359989,["Administrator@WIN-T3FPCJLTUH1",[[1,855,"来"]],[855,855],[856,856]]],[1605251363514,["Administrator@WIN-T3FPCJLTUH1",[[1,858,"两者，"]],[858,858],[861,861]]],[1605251419690,["Administrator@WIN-T3FPCJLTUH1",[[1,861,"玩王者荣耀的时候，教学视频的渲染就是离线渲染，实时对战的渲染是"]],[861,861],[892,892]]],[1605251427250,["Administrator@WIN-T3FPCJLTUH1",[[-1,884,"实时对战"]],[888,888],[884,884]]],[1605251434425,["Administrator@WIN-T3FPCJLTUH1",[[-1,877,"就"]],[878,878],[877,877]]],[1605251444204,["Administrator@WIN-T3FPCJLTUH1",[[1,883,"对决中"]],[883,883],[886,886]]],[1605251451252,["Administrator@WIN-T3FPCJLTUH1",[[1,890,"实时渲染。"]],[890,890],[895,895]]],[1605251452075,["Administrator@WIN-T3FPCJLTUH1",[[1,895,"\n\n"]],[895,895],[896,896]]],[1605251454000,["Administrator@WIN-T3FPCJLTUH1",[[1,897,"\n"]],[896,896],[897,897]]],[1605251480889,["Administrator@WIN-T3FPCJLTUH1",[[1,897,"实时渲染：就是需要不停的对画面进行渲染，即使画面中什么也没有改变，也需要重新渲染。"]],[897,897],[938,938]]],[1605251484263,["Administrator@WIN-T3FPCJLTUH1",[[-1,901,"：就是"]],[904,904],[901,901]]],[1605251488989,["Administrator@WIN-T3FPCJLTUH1",[[1,936,"\n"]],[935,935],[936,936]]],[1605251491841,["Administrator@WIN-T3FPCJLTUH1",[[-1,936,"\n"],[1,937,"怎么"]],[936,936],[938,938]]],[1605251492889,["Administrator@WIN-T3FPCJLTUH1",[[-1,937,"么"]],[938,938],[937,937]]],[1605251493189,["Administrator@WIN-T3FPCJLTUH1",[[-1,936,"怎"],[1,937,"\n"]],[937,937],[936,936]]],[1605251499279,["Administrator@WIN-T3FPCJLTUH1",[[-1,936,"\n"],[1,937,"怎么"]],[936,936],[938,938]]],[1605251516193,["Administrator@WIN-T3FPCJLTUH1",[[1,938,"进行这种操作呢"]],[938,938],[945,945]]],[1605251520079,["Administrator@WIN-T3FPCJLTUH1",[[1,936,"那"]],[936,936],[937,937]]],[1605251525266,["Administrator@WIN-T3FPCJLTUH1",[[1,946,"？循环。"]],[946,946],[950,950]]],[1605251525452,["Administrator@WIN-T3FPCJLTUH1",[[1,950,"\n\n"]],[950,950],[951,951]]],[1605251528390,["Administrator@WIN-T3FPCJLTUH1",[[1,952,"\n"]],[951,951],[952,952]]],[1605251529141,["Administrator@WIN-T3FPCJLTUH1",[[-1,952,"\n"],[1,953,"`"]],[952,952],[953,953]]],[1605251529503,["Administrator@WIN-T3FPCJLTUH1",[[1,953,"``"]],[953,953],[955,955]]],[1605251529529,["Administrator@WIN-T3FPCJLTUH1",[[1,955,"language\n```\n"]],[955,955],[955,963]]],[1605251530252,["Administrator@WIN-T3FPCJLTUH1",[[-1,955,"language"],[1,963,"j"]],[955,963],[956,956]]],[1605251531890,["Administrator@WIN-T3FPCJLTUH1",[[1,956,"avascript"]],[956,956],[965,965]]],[1605251532115,["Administrator@WIN-T3FPCJLTUH1",[[1,966,"\n"]],[965,965],[966,966]]],[1605251537390,["Administrator@WIN-T3FPCJLTUH1",[[1,966,"function render() {}"]],[966,966],[986,986]]],[1605251538040,["Administrator@WIN-T3FPCJLTUH1",[[1,985,"\n"]],[985,985],[986,986]]],[1605251539040,["Administrator@WIN-T3FPCJLTUH1",[[1,986,"\n"]],[986,986],[987,987]]],[1605251549166,["Administrator@WIN-T3FPCJLTUH1",[[1,986,"  cube.rotation.x +="]],[986,986],[1006,1006]]],[1605251550340,["Administrator@WIN-T3FPCJLTUH1",[[1,1006," 0/"]],[1006,1006],[1009,1009]]],[1605251550728,["Administrator@WIN-T3FPCJLTUH1",[[-1,1008,"/"]],[1009,1009],[1008,1008]]],[1605251552216,["Administrator@WIN-T3FPCJLTUH1",[[1,1008,".1;"]],[1008,1008],[1011,1011]]],[1605251552428,["Administrator@WIN-T3FPCJLTUH1",[[1,1012,"  \n"]],[1011,1011],[1014,1014]]],[1605251562791,["Administrator@WIN-T3FPCJLTUH1",[[1,1014,"cube.rotation.y + "]],[1014,1014],[1032,1032]]],[1605251563339,["Administrator@WIN-T3FPCJLTUH1",[[-1,1031," "]],[1032,1032],[1031,1031]]],[1605251565590,["Administrator@WIN-T3FPCJLTUH1",[[1,1031,"= 0.1;"]],[1031,1031],[1037,1037]]],[1605251566553,["Administrator@WIN-T3FPCJLTUH1",[[1,1038,"  \n"]],[1037,1037],[1040,1040]]],[1605251573967,["Administrator@WIN-T3FPCJLTUH1",[[1,1040,"renderer.render();"]],[1040,1040],[1058,1058]]],[1605251579228,["Administrator@WIN-T3FPCJLTUH1",[[1,1056,"scene, camera"]],[1056,1056],[1069,1069]]],[1605251582202,["Administrator@WIN-T3FPCJLTUH1",[[1,1072,"  \n"]],[1071,1071],[1074,1074]]],[1605251596192,["Administrator@WIN-T3FPCJLTUH1",[[1,1074,"requestAnimationFrame();"]],[1074,1074],[1098,1098]]],[1605251597792,["Administrator@WIN-T3FPCJLTUH1",[[1,1096,"render"]],[1096,1096],[1102,1102]]],[1605251611689,["Administrator@WIN-T3FPCJLTUH1",[[1,1111,"\n"]],[1110,1110],[1111,1111]]],[1605251611876,["Administrator@WIN-T3FPCJLTUH1",[[1,1112,"\n"]],[1111,1111],[1112,1112]]],[1605251614665,["Administrator@WIN-T3FPCJLTUH1",[[-1,1112,"\n"],[1,1113,"k"]],[1112,1112],[1113,1113]]],[1605251615689,["Administrator@WIN-T3FPCJLTUH1",[[-1,1112,"k"],[1,1113,"\n"]],[1113,1113],[1112,1112]]],[1605251622131,["Administrator@WIN-T3FPCJLTUH1",[[1,947,"**"],[1,949,"**"]],[947,949],[947,953]]]],null,"Administrator@WIN-T3FPCJLTUH1"],["84d883e7-3f04-4dec-baf8-c695fcaefdc6",1605252827181,"# day02\n\n## 添加物体到场景中\n\n```javascript\n// geometry: 几何体; CubeGeometry: 立方体\nvar geometry = new THREE.CubeGeometry(1, 1, 1);\n// material: 材质\nvar material = new THREE.MeshBasicMateria({color: 0x00ff00});\n// mesh: 使...结合\nvar cube = new THREE.Mesh(geometry, material);\n\nscene.add(cube);\n```\n\n`CubeGeometry`是一个正方体或者长方体，究竟是什么，由它的3个参数所决定，`CubeGeometry`的原型如下代码所示：\n\n```javascript\nCubeGeometry(width, height, depth, segmentsWidth, segmentsHeight, segmentsDepth, materials, sides)\n```\n\n`width`：立方体x轴的长度；\n`height`：立方体y轴的长度；\n`depth`：立方体z轴的深度，也就是长度。\n\n## 渲染\n\n渲染应该使用渲染器，结合相机和场景来得到结果画面。实现这个功能的函数是\n`renderer.render(scene, camera)`\n渲染函数的原型如下：\n`render( scene, camera, renderTarget, forceClear )`\n\n各个参数的意义是：\n`scene`：前面定义的场景；\n`camera`：前面定义的相机；\n`renderTarget`：渲染的目标，默认是渲染到前面定义的render变量中；\n`forceClear`：每次绘制之前都将画布的内容给清除，即使自动清除标志autoClear为false，也会清除。\n\n## 渲染循环\n\n渲染有两种方式：实时渲染和离线渲染 。\n举个栗子来理解两者，玩王者荣耀的时候，教学视频的渲染是离线渲染，对决中的渲染是实时渲染。\n\n实时渲染需要不停的对画面进行渲染，即使画面中什么也没有改变，也需要重新渲染。\n那怎么进行这种操作呢？**循环**。\n\n```javascript\nfunction render() {\n  cube.rotation.x += 0.1;\n  cube.rotation.y += 0.1;\n  renderer.render(scene, camera);\n  requestAnimationFrame(render);\n}\n```\n\n\n",[[1605252776202,["Administrator@WIN-T3FPCJLTUH1",[[-1,1116,"\n"],[1,1117,"#"]],[1116,1116],[1117,1117]]],[1605252779531,["Administrator@WIN-T3FPCJLTUH1",[[1,1117,"# 重构"]],[1117,1117],[1121,1121]]],[1605252780026,["Administrator@WIN-T3FPCJLTUH1",[[1,1121,"\n\n"]],[1121,1121],[1122,1122]]],[1605252780474,["Administrator@WIN-T3FPCJLTUH1",[[1,1123,"\n"]],[1122,1122],[1123,1123]]],[1605252788240,["Administrator@WIN-T3FPCJLTUH1",[[-1,1123,"\n"],[1,1124,"·"]],[1123,1123],[1124,1124]]],[1605252788875,["Administrator@WIN-T3FPCJLTUH1",[[-1,1123,"·"],[1,1124,"\n"]],[1124,1124],[1123,1123]]],[1605252789326,["Administrator@WIN-T3FPCJLTUH1",[[-1,1123,"\n"],[1,1124,"`"]],[1123,1123],[1124,1124]]],[1605252789663,["Administrator@WIN-T3FPCJLTUH1",[[1,1124,"``"]],[1124,1124],[1126,1126]]],[1605252789691,["Administrator@WIN-T3FPCJLTUH1",[[1,1126,"language\n```\n"]],[1126,1126],[1126,1134]]],[1605252790363,["Administrator@WIN-T3FPCJLTUH1",[[-1,1126,"language"],[1,1134,"h"]],[1126,1134],[1127,1127]]],[1605252790876,["Administrator@WIN-T3FPCJLTUH1",[[1,1127,"tml"]],[1127,1127],[1130,1130]]],[1605252791237,["Administrator@WIN-T3FPCJLTUH1",[[1,1131,"\n"]],[1130,1130],[1131,1131]]],[1605252808752,["Administrator@WIN-T3FPCJLTUH1",[[1,1135,"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Three框架</title>\n\t\t<script src=\"js/Three.js\" data-ke-src=\"js/Three.js\"></script>\n\t\t<style type=\"text/css\">\n\t\t\tdiv#canvas-frame {\n\t\t\t\tborder: none;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 600px;\n\t\t\t\tbackground-color: #EEEEEE;\n\t\t\t}\n\n\t\t</style>\n\t\t<script>\n            var renderer;\n            function initThree() {\n                width = document.getElementById('canvas-frame').clientWidth;\n                height = document.getElementById('canvas-frame').clientHeight;\n                renderer = new THREE.WebGLRenderer({\n                    antialias : true\n                });\n                renderer.setSize(width, height);\n                document.getElementById('canvas-frame').appendChild(renderer.domElement);\n                renderer.setClearColor(0xFFFFFF, 1.0);\n            }\n\n            var camera;\n            function initCamera() {\n                camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n                camera.position.x = 0;\n                camera.position.y = 1000;\n                camera.position.z = 0;\n                camera.up.x = 0;\n                camera.up.y = 0;\n                camera.up.z = 1;\n                camera.lookAt({\n                    x : 0,\n                    y : 0,\n                    z : 0\n                });\n            }\n\n            var scene;\n            function initScene() {\n                scene = new THREE.Scene();\n            }\n\n            var light;\n            function initLight() {\n                light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n                light.position.set(100, 100, 200);\n                scene.add(light);\n            }\n\n            var cube;\n            function initObject() {\n\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors} );\n                var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0xFF0000 );\n\n                // 线的材质可以由2点的颜色决定\n                var p1 = new THREE.Vector3( -100, 0, 100 );\n                var p2 = new THREE.Vector3(  100, 0, -100 );\n                geometry.vertices.push(p1);\n                geometry.vertices.push(p2);\n                geometry.colors.push( color1, color2 );\n\n                var line = new THREE.Line( geometry, material, THREE.LinePieces );\n                scene.add(line);\n            }\n            function render()\n            {\n                renderer.clear();\n                renderer.render(scene, camera);\n                requestAnimationFrame(render);\n            }\n            function threeStart() {\n                initThree();\n                initCamera();\n                initScene();\n                initLight();\n                initObject();\n                render();\n            }\n\n\t\t</script>\n\t</head>\n\n\t<body onload=\"threeStart();\">\n\t\t<div id=\"canvas-frame\"></div>\n\t</body>\n</html><!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Three框架</title>\n\t\t<script src=\"js/Three.js\" data-ke-src=\"js/Three.js\"></script>\n\t\t<style type=\"text/css\">\n\t\t\tdiv#canvas-frame {\n\t\t\t\tborder: none;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 600px;\n\t\t\t\tbackground-color: #EEEEEE;\n\t\t\t}\n\n\t\t</style>\n\t\t<script>\n            var renderer;\n            function initThree() {\n                width = document.getElementById('canvas-frame').clientWidth;\n                height = document.getElementById('canvas-frame').clientHeight;\n                renderer = new THREE.WebGLRenderer({\n                    antialias : true\n                });\n                renderer.setSize(width, height);\n                document.getElementById('canvas-frame').appendChild(renderer.domElement);\n                renderer.setClearColor(0xFFFFFF, 1.0);\n            }\n\n            var camera;\n            function initCamera() {\n                camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n                camera.position.x = 0;\n                camera.position.y = 1000;\n                camera.position.z = 0;\n                camera.up.x = 0;\n                camera.up.y = 0;\n                camera.up.z = 1;\n                camera.lookAt({\n                    x : 0,\n                    y : 0,\n                    z : 0\n                });\n            }\n\n            var scene;\n            function initScene() {\n                scene = new THREE.Scene();\n            }\n\n            var light;\n            function initLight() {\n                light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n                light.position.set(100, 100, 200);\n                scene.add(light);\n            }\n\n            var cube;\n            function initObject() {\n\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors} );\n                var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0xFF0000 );\n\n                // 线的材质可以由2点的颜色决定\n                var p1 = new THREE.Vector3( -100, 0, 100 );\n                var p2 = new THREE.Vector3(  100, 0, -100 );\n                geometry.vertices.push(p1);\n                geometry.vertices.push(p2);\n                geometry.colors.push( color1, color2 );\n\n                var line = new THREE.Line( geometry, material, THREE.LinePieces );\n                scene.add(line);\n            }\n            function render()\n            {\n                renderer.clear();\n                renderer.render(scene, camera);\n                requestAnimationFrame(render);\n            }\n            function threeStart() {\n                initThree();\n                initCamera();\n                initScene();\n                initLight();\n                initObject();\n                render();\n            }\n\n\t\t</script>\n\t</head>\n\n\t<body onload=\"threeStart();\">\n\t\t<div id=\"canvas-frame\"></div>\n\t</body>\n</html>"]],[1135,1135],[7069,7069]]],[1605252809815,["Administrator@WIN-T3FPCJLTUH1",[[-1,1135,"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Three框架</title>\n\t\t<script src=\"js/Three.js\" data-ke-src=\"js/Three.js\"></script>\n\t\t<style type=\"text/css\">\n\t\t\tdiv#canvas-frame {\n\t\t\t\tborder: none;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 600px;\n\t\t\t\tbackground-color: #EEEEEE;\n\t\t\t}\n\n\t\t</style>\n\t\t<script>\n            var renderer;\n            function initThree() {\n                width = document.getElementById('canvas-frame').clientWidth;\n                height = document.getElementById('canvas-frame').clientHeight;\n                renderer = new THREE.WebGLRenderer({\n                    antialias : true\n                });\n                renderer.setSize(width, height);\n                document.getElementById('canvas-frame').appendChild(renderer.domElement);\n                renderer.setClearColor(0xFFFFFF, 1.0);\n            }\n\n            var camera;\n            function initCamera() {\n                camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n                camera.position.x = 0;\n                camera.position.y = 1000;\n                camera.position.z = 0;\n                camera.up.x = 0;\n                camera.up.y = 0;\n                camera.up.z = 1;\n                camera.lookAt({\n                    x : 0,\n                    y : 0,\n                    z : 0\n                });\n            }\n\n            var scene;\n            function initScene() {\n                scene = new THREE.Scene();\n            }\n\n            var light;\n            function initLight() {\n                light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n                light.position.set(100, 100, 200);\n                scene.add(light);\n            }\n\n            var cube;\n            function initObject() {\n\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors} );\n                var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0xFF0000 );\n\n                // 线的材质可以由2点的颜色决定\n                var p1 = new THREE.Vector3( -100, 0, 100 );\n                var p2 = new THREE.Vector3(  100, 0, -100 );\n                geometry.vertices.push(p1);\n                geometry.vertices.push(p2);\n                geometry.colors.push( color1, color2 );\n\n                var line = new THREE.Line( geometry, material, THREE.LinePieces );\n                scene.add(line);\n            }\n            function render()\n            {\n                renderer.clear();\n                renderer.render(scene, camera);\n                requestAnimationFrame(render);\n            }\n            function threeStart() {\n                initThree();\n                initCamera();\n                initScene();\n                initLight();\n                initObject();\n                render();\n            }\n\n\t\t</script>\n\t</head>\n\n\t<body onload=\"threeStart();\">\n\t\t<div id=\"canvas-frame\"></div>\n\t</body>\n</html><!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Three框架</title>\n\t\t<script src=\"js/Three.js\" data-ke-src=\"js/Three.js\"></script>\n\t\t<style type=\"text/css\">\n\t\t\tdiv#canvas-frame {\n\t\t\t\tborder: none;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 600px;\n\t\t\t\tbackground-color: #EEEEEE;\n\t\t\t}\n\n\t\t</style>\n\t\t<script>\n            var renderer;\n            function initThree() {\n                width = document.getElementById('canvas-frame').clientWidth;\n                height = document.getElementById('canvas-frame').clientHeight;\n                renderer = new THREE.WebGLRenderer({\n                    antialias : true\n                });\n                renderer.setSize(width, height);\n                document.getElementById('canvas-frame').appendChild(renderer.domElement);\n                renderer.setClearColor(0xFFFFFF, 1.0);\n            }\n\n            var camera;\n            function initCamera() {\n                camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n                camera.position.x = 0;\n                camera.position.y = 1000;\n                camera.position.z = 0;\n                camera.up.x = 0;\n                camera.up.y = 0;\n                camera.up.z = 1;\n                camera.lookAt({\n                    x : 0,\n                    y : 0,\n                    z : 0\n                });\n            }\n\n            var scene;\n            function initScene() {\n                scene = new THREE.Scene();\n            }\n\n            var light;\n            function initLight() {\n                light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n                light.position.set(100, 100, 200);\n                scene.add(light);\n            }\n\n            var cube;\n            function initObject() {\n\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors} );\n                var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0xFF0000 );\n\n                // 线的材质可以由2点的颜色决定\n                var p1 = new THREE.Vector3( -100, 0, 100 );\n                var p2 = new THREE.Vector3(  100, 0, -100 );\n                geometry.vertices.push(p1);\n                geometry.vertices.push(p2);\n                geometry.colors.push( color1, color2 );\n\n                var line = new THREE.Line( geometry, material, THREE.LinePieces );\n                scene.add(line);\n            }\n            function render()\n            {\n                renderer.clear();\n                renderer.render(scene, camera);\n                requestAnimationFrame(render);\n            }\n            function threeStart() {\n                initThree();\n                initCamera();\n                initScene();\n                initLight();\n                initObject();\n                render();\n            }\n\n\t\t</script>\n\t</head>\n\n\t<body onload=\"threeStart();\">\n\t\t<div id=\"canvas-frame\"></div>\n\t</body>\n</html>"]],[7069,7069],[1135,1135]]],[1605252814051,["Administrator@WIN-T3FPCJLTUH1",[[1,1131,"<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta charset=\"UTF-8\">\n\t\t<title>Three框架</title>\n\t\t<script src=\"js/Three.js\" data-ke-src=\"js/Three.js\"></script>\n\t\t<style type=\"text/css\">\n\t\t\tdiv#canvas-frame {\n\t\t\t\tborder: none;\n\t\t\t\tcursor: pointer;\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 600px;\n\t\t\t\tbackground-color: #EEEEEE;\n\t\t\t}\n\n\t\t</style>\n\t\t<script>\n            var renderer;\n            function initThree() {\n                width = document.getElementById('canvas-frame').clientWidth;\n                height = document.getElementById('canvas-frame').clientHeight;\n                renderer = new THREE.WebGLRenderer({\n                    antialias : true\n                });\n                renderer.setSize(width, height);\n                document.getElementById('canvas-frame').appendChild(renderer.domElement);\n                renderer.setClearColor(0xFFFFFF, 1.0);\n            }\n\n            var camera;\n            function initCamera() {\n                camera = new THREE.PerspectiveCamera(45, width / height, 1, 10000);\n                camera.position.x = 0;\n                camera.position.y = 1000;\n                camera.position.z = 0;\n                camera.up.x = 0;\n                camera.up.y = 0;\n                camera.up.z = 1;\n                camera.lookAt({\n                    x : 0,\n                    y : 0,\n                    z : 0\n                });\n            }\n\n            var scene;\n            function initScene() {\n                scene = new THREE.Scene();\n            }\n\n            var light;\n            function initLight() {\n                light = new THREE.DirectionalLight(0xFF0000, 1.0, 0);\n                light.position.set(100, 100, 200);\n                scene.add(light);\n            }\n\n            var cube;\n            function initObject() {\n\n                var geometry = new THREE.Geometry();\n                var material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors} );\n                var color1 = new THREE.Color( 0x444444 ), color2 = new THREE.Color( 0xFF0000 );\n\n                // 线的材质可以由2点的颜色决定\n                var p1 = new THREE.Vector3( -100, 0, 100 );\n                var p2 = new THREE.Vector3(  100, 0, -100 );\n                geometry.vertices.push(p1);\n                geometry.vertices.push(p2);\n                geometry.colors.push( color1, color2 );\n\n                var line = new THREE.Line( geometry, material, THREE.LinePieces );\n                scene.add(line);\n            }\n            function render()\n            {\n                renderer.clear();\n                renderer.render(scene, camera);\n                requestAnimationFrame(render);\n            }\n            function threeStart() {\n                initThree();\n                initCamera();\n                initScene();\n                initLight();\n                initObject();\n                render();\n            }\n\n\t\t</script>\n\t</head>\n\n\t<body onload=\"threeStart();\">\n\t\t<div id=\"canvas-frame\"></div>\n\t</body>\n</html>"]],[1131,1131],[4098,4098]]],[1605252848786,["Administrator@WIN-T3FPCJLTUH1",[[-1,1154,"\t"],[1,1155,"  "],[-1,1162,"\t\t"],[1,1164,"    "],[-1,1187,"\t\t"],[1,1189,"    "],[-1,1212,"\t\t"],[1,1214,"    "],[-1,1276,"\t\t"],[1,1278,"    "],[-1,1302,"\t\t\t"],[1,1305,"      "],[-1,1324,"\t\t\t\t"],[1,1328,"        "],[-1,1342,"\t\t\t\t"],[1,1346,"        "],[-1,1363,"\t\t\t\t"],[1,1367,"        "],[-1,1380,"\t\t\t\t"],[1,1384,"        "],[-1,1399,"\t\t\t\t"],[1,1403,"        "],[-1,1430,"\t\t\t}\n\n\t\t"],[1,1438,"      }\n    "],[-1,1447,"\t\t"],[1,1449,"    "],[-1,1458,"      "],[-1,1484," "],[1,1485,"\n"],[-1,1491,"     "],[-1,1519,"        "],[-1,1596,"        "],[-1,1683,"        "],[-1,1738,"          "],[-1,1757," "],[-1,1765," "],[-1,1774,"       "],[-1,1785,"        "],[-1,1834,"      "],[-1,1848,"  "],[-1,1932,"        "],[-1,1985,"      "],[-1,1994,"     "],[-1,2005," "],[-1,2018,"      "],[1,2024,"\n"],[-1,2054,"        "],[-1,2138,"     "],[-1,2151,"   "],[-1,2177,"        "],[-1,2227,"        "],[-1,2258,"  "],[-1,2268,"      "],[-1,2291,"     "],[-1,2304,"   "],[-1,2324,"       "],[-1,2339," "],[-1,2357,"     "],[-1,2370,"   "],[-1,2389,"  "],[-1,2401,"        "],[-1,2410," "],[-1,2416," "],[-1,2427,"         "],[-1,2437," "],[-1,2443," "],[-1,2454,"         "],[-1,2464," "],[-1,2477,"        "],[-1,2489,"  "],[-1,2497,"    "],[-1,2504,"      "],[-1,2527,"      "],[1,2533,"\n"],[-1,2562,"    "],[-1,2574,"    "],[-1,2605,"      "],[-1,2626,"      "],[-1,2643,"    "],[1,2647,"\n"],[-1,2653,"  "],[-1,2678,"        "],[-1,2756,"        "],[-1,2807,"        "],[-1,2833,"     "],[-1,2844," "],[-1,2848,"      "],[-1,2870,"   "],[1,2873,"\n"],[-1,2879,"   "],[-1,2907,"       "],[-1,2922," "],[-1,2960,"        "],[-1,3019," {"],[1,3021,"{\n         "],[-1,3054,"} );"],[1,3067,"});\n"],[-1,3104," "],[-1,3113," "],[1,3116,"\n         "],[-1,3142," "],[-1,3151," "],[-1,3164,"        "],[-1,3190,"   "],[-1,3201,"     "],[-1,3233," "],[-1,3246," "],[-1,3250,"   "],[-1,3261,"     "],[-1,3293,"  "],[-1,3307," "],[-1,3311,"  "],[-1,3321,"      "],[-1,3355,"    "],[-1,3367,"    "],[-1,3399,"       "],[-1,3414," "],[-1,3436," "],[-1,3451," "],[-1,3456,"       "],[-1,3471," "],[-1,3498," "],[-1,3535," "],[-1,3539,"        "],[-1,3578,"      "],[-1,3586,"   "],[1,3589,"\n"],[-1,3595,"   "],[-1,3615,"\n           "],[-1,3630,"      "],[-1,3644,"  "],[-1,3664,"        "],[-1,3720,"        "],[-1,3759,"  "],[-1,3767,"    "],[-1,3773,"      "],[1,3779,"\n"],[-1,3817,"        "],[-1,3838,"  "],[-1,3848,"      "],[-1,3868,"     "],[-1,3881,"   "],[-1,3897,"       "],[-1,3912," "],[-1,3926,"     "],[-1,3939,"   "],[-1,3956,"  "],[-1,3966,"      "],[-1,3988,"  "],[1,3990,"}\n"],[-1,3994,"}\n\n\t\t"],[-1,4009,"\t"],[1,4010,"  "],[-1,4019,"\t"],[1,4020,"  "],[-1,4050,"\t\t"],[1,4052,"    "],[-1,4082,"\t"],[1,4083,"  "]],[1147,4098],[3673,3673]]],[1605253250304,["Administrator@WIN-T3FPCJLTUH1",[[1,213,","]],[213,213],[214,214]]],[1605253251404,["Administrator@WIN-T3FPCJLTUH1",[[-1,213,","]],[214,214],[213,213]]],[1605253254030,["Administrator@WIN-T3FPCJLTUH1",[[1,213,"，纹理"]],[213,213],[216,216]]]],null,"Administrator@WIN-T3FPCJLTUH1"]]}